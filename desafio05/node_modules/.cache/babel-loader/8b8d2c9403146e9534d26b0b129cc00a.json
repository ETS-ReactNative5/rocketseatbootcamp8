{"ast":null,"code":"var _jsxFileName = \"/home/adriano/rocketseat/bootcamp8/desafio05/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true,\n        error: false\n      });\n\n      try {\n        const _this$state = this.state,\n              newRepo = _this$state.newRepo,\n              repositories = _this$state.repositories;\n        if (newRepo === '') throw 'You need inform a repository';\n        const hasRepo = repositories.find(r => r.name === newRepo);\n        if (hasRepo) throw 'Repository duplicated';\n        const response = await api.get(\"/repos/\".concat(newRepo));\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: ''\n        });\n      } catch (error) {\n        this.setState({\n          error: true\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  // Load LocalStorage data\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Save LocalStorage data\n\n\n  componentDidUpdate(_, prevState) {\n    const repositories = this.state.repositories;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newRepo = _this$state2.newRepo,\n          repositories = _this$state2.repositories,\n          loading = _this$state2.loading,\n          error = _this$state2.error;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), \"Reposit\\xF3rios\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading ? 1 : 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#fff\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#fff\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, repository.name), React.createElement(Link, {\n      to: \"/repository/\".concat(encodeURIComponent(repository.name)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/adriano/rocketseat/bootcamp8/desafio05/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","Link","api","Container","Form","SubmitButton","List","Main","state","newRepo","repositories","loading","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","error","hasRepo","find","r","name","response","get","data","full_name","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n  };\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value });\n  };\n\n  // Load LocalStorage data\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // Save LocalStorage data\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true, error: false });\n\n    try {\n      const { newRepo, repositories } = this.state;\n\n      if (newRepo === '') throw 'You need inform a repository';\n\n      const hasRepo = repositories.find(r => r.name === newRepo);\n\n      if (hasRepo) throw 'Repository duplicated';\n\n      const response = await api.get(`/repos/${newRepo}`);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: ''\n      });\n      \n    } catch (error) {\n      this.setState({ error: true });\n    } finally {\n      this.setState({ loading: false });\n    }\n    \n  };\n\n  render() {\n    const { newRepo, repositories, loading, error } = this.state;\n\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositórios\n        </h1>\n\n        <Form onSubmit={this.handleSubmit} error={error}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar repositório\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n          <SubmitButton loading={loading ? 1 : 0}>\n            {loading ? (\n              <FaSpinner color=\"#fff\" size={14} />\n            ) : (\n              <FaPlus color=\"#fff\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}